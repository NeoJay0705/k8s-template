
# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# [START container_helloapp_ingress]
# [START gke_manifests_helloweb_ingress_static_ip_ingress_helloweb]
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: simple-server-ingress
  annotations:
    # kubernetes.io/ingress.global-static-ip-name: helloweb-ip
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /$1
  labels:
    app: hello
spec:
  tls:
    - secretName: grafana-tls
  # defaultBackend:
  #   service:
  #     name: simple-server-backend
  #     port:
  #       number: 8080
  rules:
    # - host: my-app.example.com # -H "Host: my-app.example.com"
    - http:
        paths:
          - path: /v2/(.*)
            pathType: ImplementationSpecific
            backend:
              service:
                name: simple-server-2-backend
                port:
                  number: 8080
          - path: /v1/(.*)                  # ImplementationSpecific no (.*) if Prefix
            pathType: ImplementationSpecific # Prefix
            backend:
              service:
                name: simple-server-backend
                port:
                  number: 8080
          - path: /(.*)
            pathType: ImplementationSpecific
            backend:
              service:
                name: grafana
                port:
                  number: 80
                # namespace: monitoring # Explicitly add the namespace
    # - host: grafana.example.com # Replace with your domain or IP
    #   http:
    #     paths:
    #       - path: /
    #         pathType: Prefix
    #         backend:
    #           service:
    #             name: grafana
    #             port:
    #               number: 80
# [END gke_manifests_helloweb_ingress_static_ip_ingress_helloweb]
---
# [START gke_manifests_helloweb_ingress_static_ip_service_helloweb_backend]
apiVersion: v1
kind: Service
metadata:
  name: simple-server-backend
  labels:
    app: simple-server
spec:
  type: NodePort # ClusterIP:cluster-only, NodePort:Node IP, LoadBalancer:Public IP, support cloud solution
  selector:
    app: simple-server
    tier: web
  ports:
  - port: 8080
    targetPort: 8080
# [END gke_manifests_helloweb_ingress_static_ip_service_helloweb_backend]
# [END container_helloapp_ingress]
---
# [START gke_manifests_helloweb_ingress_static_ip_service_helloweb_backend]
apiVersion: v1
kind: Service
metadata:
  name: simple-server-2-backend
  labels:
    app: simple-server-2
spec:
  type: NodePort
  selector:
    app: simple-server-2
    tier: web
  ports:
  - port: 8080
    targetPort: 8080
# [END gke_manifests_helloweb_ingress_static_ip_service_helloweb_backend]
# [END container_helloapp_ingress]
---
